What happens when you initialize a repository? Why do you need to do it?

You are starting a new project that you want to save on Git.

How is the staging area different from the working directory and the repository? What value do you think it offers?

It is the intermediary area before committing.

How can you use the staging area to make sure you have one commit per logical change?
It ensures that you put a logical chunk in the staging area and then commit it. Because you have to take it to staging first, you have to divide the work logically.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When you want to make an alternate version. You can have all versions be accessible

How do the diagrams help you visualize the branch structure?
Diagrams are necessary to map out all of the major features and changes you’re developing simultaneously.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Combines two sets of changes. The diagram shows that we return the history of both sets.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
Auto is easy when changes are obvious. Manual ones allow for control but are hard to negotiate between the different people’s versions.